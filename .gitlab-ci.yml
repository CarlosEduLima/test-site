# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

stages:          # List of stages for jobs, and their order of execution
  # - test
  - build
  - deploy

# sonarqube-check:
#   stage: test
#   tags:
#     - runner-1
#   image:
#     name: sonarsource/sonar-scanner-cli:latest
#     entrypoint: [""]
#   variables:
#     SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
#     GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
#   cache:
#     key: "${CI_JOB_NAME}"
#     paths:
#       - .sonar/cache
#   script:
#     - sonar-scanner
#   allow_failure: true


build:
  when: manual
#   only:
#     - master
  image: 
    name: node:16.16.0-alpine3.16
  stage: build
  tags:
    - runner-1
  before_script:
    - yarn
    - mkdir $HOME/.ssh 
    - echo $SSH_KEY | base64 -d > $HOME/.ssh/.id_rsa.pub
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/
      - .next/cache/
  artifacts:
    paths:
      - out/
  script:
    - ls -la
    - yarn build

deploy_staging:
  when: manual
#   only:
#     - master
  stage: deploy
  tags:
    - runner-1
  before_script:
    - cd out
    - grep -Rli uat.iziw.com.br | xargs sed -i "s/uat.iziw.com.br/hlg.iziw.com.br/g"
  script:
    - scp -r -P$SERVER_PORT * $SERVER_USER@$SERVER_HOST:$SERVER_PATH_STAGING
